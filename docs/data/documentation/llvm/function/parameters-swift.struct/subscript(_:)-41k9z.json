{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"internalParam","text":"r"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RangeExpression","preciseIdentifier":"s:SX"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Bound"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A range of the collection’s indices. The bounds of"},{"type":"text","text":" "},{"type":"text","text":"the range must be valid indices of the collection."}]}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The range expression is converted to a concrete subrange relative to this"},{"type":"text","text":" "},{"type":"text","text":"collection. For example, using a "},{"type":"codeVoice","code":"PartialRangeFrom"},{"type":"text","text":" range expression"},{"type":"text","text":" "},{"type":"text","text":"with an array accesses the subrange from the start of the range"},{"type":"text","text":" "},{"type":"text","text":"expression until the end of the array."}]},{"type":"codeListing","syntax":null,"code":["let streets = [\"Adams\", \"Bryant\", \"Channing\", \"Douglas\", \"Evarts\"]","let streetsSlice = streets[2...]","print(streetsSlice)","\/\/ [\"Channing\", \"Douglas\", \"Evarts\"]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The accessed slice uses the same indices for the same elements as the"},{"type":"text","text":" "},{"type":"text","text":"original collection uses. This example searches "},{"type":"codeVoice","code":"streetsSlice"},{"type":"text","text":" for one"},{"type":"text","text":" "},{"type":"text","text":"of the strings in the slice, and then uses that index in the original"},{"type":"text","text":" "},{"type":"text","text":"array."}]},{"type":"codeListing","syntax":null,"code":["let index = streetsSlice.firstIndex(of: \"Evarts\")    \/\/ 4","print(streets[index!])","\/\/ \"Evarts\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Always use the slice’s "},{"type":"codeVoice","code":"startIndex"},{"type":"text","text":" property instead of assuming that its"},{"type":"text","text":" "},{"type":"text","text":"indices start at a particular value. Attempting to access an element by"},{"type":"text","text":" "},{"type":"text","text":"using an index outside the bounds of the slice’s indices may result in a"},{"type":"text","text":" "},{"type":"text","text":"runtime error, even if that index is valid for the original collection."}]},{"type":"codeListing","syntax":null,"code":["print(streetsSlice.startIndex)","\/\/ 2","print(streetsSlice[2])","\/\/ \"Channing\"","","print(streetsSlice[0])","\/\/ error: Index out of bounds"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/llvm\/function\/parameters-swift.struct\/subscript(_:)-41k9z"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct\/subscript(_:)-41k9z","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Accesses the contiguous subrange of the collection’s elements specified"},{"type":"text","text":" "},{"type":"text","text":"by a range expression."}],"kind":"symbol","metadata":{"role":"symbol","title":"subscript(_:)","roleHeading":"Instance Subscript","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"symbolKind":"subscript","externalID":"s:SlsEy11SubSequenceQzqd__cSXRd__5BoundQyd__5IndexRtzluip::SYNTHESIZED::s:4LLVM8FunctionV10ParametersV","extendedModule":"Swift","modules":[{"name":"LLVM"}]},"hierarchy":{"paths":[["doc:\/\/LLVM\/documentation\/LLVM","doc:\/\/LLVM\/documentation\/LLVM\/Function","doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct","doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct\/Collection-Implementations"]]},"references":{"doc://LLVM/documentation/LLVM/Function/Parameters-swift.struct/Collection-Implementations":{"role":"collectionGroup","title":"Collection Implementations","abstract":[],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct\/Collection-Implementations","kind":"article","type":"topic","url":"\/documentation\/llvm\/function\/parameters-swift.struct\/collection-implementations"},"doc://LLVM/documentation/LLVM/Function/Parameters-swift.struct/subscript(_:)-41k9z":{"role":"symbol","title":"subscript(_:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"abstract":[{"type":"text","text":"Accesses the contiguous subrange of the collection’s elements specified"},{"type":"text","text":" "},{"type":"text","text":"by a range expression."}],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct\/subscript(_:)-41k9z","kind":"symbol","type":"topic","url":"\/documentation\/llvm\/function\/parameters-swift.struct\/subscript(_:)-41k9z"},"doc://LLVM/documentation/LLVM/Function":{"role":"symbol","title":"Function","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Function"}],"abstract":[{"type":"text","text":"A function in LLVM IR."}],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/Function","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Function"}],"url":"\/documentation\/llvm\/function"},"doc://LLVM/documentation/LLVM/Function/Parameters-swift.struct":{"role":"symbol","title":"Function.Parameters","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameters"}],"abstract":[{"type":"text","text":"A collection containing the parameters of a LLVM IR function."}],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parameters"}],"url":"\/documentation\/llvm\/function\/parameters-swift.struct"},"doc://LLVM/documentation/LLVM":{"role":"collection","title":"LLVM","abstract":[],"identifier":"doc:\/\/LLVM\/documentation\/LLVM","kind":"symbol","type":"topic","url":"\/documentation\/llvm"}}}