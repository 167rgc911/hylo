{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dropLast"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"k"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"k","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of elements to drop off the end of the"},{"type":"text","text":" "},{"type":"text","text":"collection. "},{"type":"codeVoice","code":"k"},{"type":"text","text":" must be greater than or equal to zero."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A subsequence that leaves off "},{"type":"codeVoice","code":"k"},{"type":"text","text":" elements from the end."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the number of elements to drop exceeds the number of elements in the"},{"type":"text","text":" "},{"type":"text","text":"collection, the result is an empty subsequence."}]},{"type":"codeListing","syntax":null,"code":["let numbers = [1, 2, 3, 4, 5]","print(numbers.dropLast(2))","\/\/ Prints \"[1, 2, 3]\"","print(numbers.dropLast(10))","\/\/ Prints \"[]\""]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1) if the collection conforms to"},{"type":"text","text":" "},{"type":"codeVoice","code":"RandomAccessCollection"},{"type":"text","text":"; otherwise, O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":" is the number of"},{"type":"text","text":" "},{"type":"text","text":"elements to drop."}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/llvm\/function\/parameters-swift.struct\/droplast(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct\/dropLast(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a subsequence containing all but the specified number of final"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"kind":"symbol","metadata":{"role":"symbol","title":"dropLast(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dropLast"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"symbolKind":"method","externalID":"s:SKsE8dropLasty11SubSequenceQzSiF::SYNTHESIZED::s:4LLVM8FunctionV10ParametersV","extendedModule":"Swift","modules":[{"name":"LLVM"}]},"hierarchy":{"paths":[["doc:\/\/LLVM\/documentation\/LLVM","doc:\/\/LLVM\/documentation\/LLVM\/Function","doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct","doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct\/BidirectionalCollection-Implementations"]]},"references":{"doc://LLVM/documentation/LLVM/Function/Parameters-swift.struct/dropLast(_:)":{"role":"symbol","title":"dropLast(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dropLast"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"abstract":[{"type":"text","text":"Returns a subsequence containing all but the specified number of final"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct\/dropLast(_:)","kind":"symbol","type":"topic","url":"\/documentation\/llvm\/function\/parameters-swift.struct\/droplast(_:)"},"doc://LLVM/documentation/LLVM/Function":{"role":"symbol","title":"Function","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Function"}],"abstract":[{"type":"text","text":"A function in LLVM IR."}],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/Function","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Function"}],"url":"\/documentation\/llvm\/function"},"doc://LLVM/documentation/LLVM/Function/Parameters-swift.struct":{"role":"symbol","title":"Function.Parameters","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameters"}],"abstract":[{"type":"text","text":"A collection containing the parameters of a LLVM IR function."}],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parameters"}],"url":"\/documentation\/llvm\/function\/parameters-swift.struct"},"doc://LLVM/documentation/LLVM/Function/Parameters-swift.struct/BidirectionalCollection-Implementations":{"role":"collectionGroup","title":"BidirectionalCollection Implementations","abstract":[],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/Function\/Parameters-swift.struct\/BidirectionalCollection-Implementations","kind":"article","type":"topic","url":"\/documentation\/llvm\/function\/parameters-swift.struct\/bidirectionalcollection-implementations"},"doc://LLVM/documentation/LLVM":{"role":"collection","title":"LLVM","abstract":[],"identifier":"doc:\/\/LLVM\/documentation\/LLVM","kind":"symbol","type":"topic","url":"\/documentation\/llvm"}}}