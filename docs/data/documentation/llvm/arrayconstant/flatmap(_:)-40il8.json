{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SegmentOfResult"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"] "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that accepts an element of this"},{"type":"text","text":" "},{"type":"text","text":"sequence as its argument and returns a sequence or collection."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The resulting flattened array."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this method to receive a single-level collection when your"},{"type":"text","text":" "},{"type":"text","text":"transformation produces a sequence or collection for each element."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, note the difference in the result of using "},{"type":"codeVoice","code":"map"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" with a transformation that returns an array."}]},{"type":"codeListing","syntax":null,"code":["let numbers = [1, 2, 3, 4]","","let mapped = numbers.map { Array(repeating: $0, count: $0) }","\/\/ [[1], [2, 2], [3, 3, 3], [4, 4, 4, 4]]","","let flatMapped = numbers.flatMap { Array(repeating: $0, count: $0) }","\/\/ [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In fact, "},{"type":"codeVoice","code":"s.flatMap(transform)"},{"type":"text","text":"  is equivalent to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Array(s.map(transform).joined())"},{"type":"text","text":"."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":" + "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of this sequence"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":" is the length of the result."}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/llvm\/arrayconstant\/flatmap(_:)-40il8"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/LLVM\/documentation\/LLVM\/ArrayConstant\/flatMap(_:)-40il8","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns an array containing the concatenated results of calling the"},{"type":"text","text":" "},{"type":"text","text":"given transformation with each element of this sequence."}],"kind":"symbol","metadata":{"role":"symbol","title":"flatMap(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SegmentOfResult"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"symbolKind":"method","externalID":"s:STsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF::SYNTHESIZED::s:4LLVM13ArrayConstantV","extendedModule":"Swift","modules":[{"name":"LLVM"}]},"hierarchy":{"paths":[["doc:\/\/LLVM\/documentation\/LLVM","doc:\/\/LLVM\/documentation\/LLVM\/ArrayConstant","doc:\/\/LLVM\/documentation\/LLVM\/ArrayConstant\/Sequence-Implementations"]]},"references":{"doc://LLVM/documentation/LLVM/ArrayConstant/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/ArrayConstant\/Sequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/llvm\/arrayconstant\/sequence-implementations"},"doc://LLVM/documentation/LLVM":{"role":"collection","title":"LLVM","abstract":[],"identifier":"doc:\/\/LLVM\/documentation\/LLVM","kind":"symbol","type":"topic","url":"\/documentation\/llvm"},"doc://LLVM/documentation/LLVM/ArrayConstant":{"role":"symbol","title":"ArrayConstant","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayConstant"}],"abstract":[{"type":"text","text":"A constant array in LLVM IR."}],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/ArrayConstant","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArrayConstant"}],"url":"\/documentation\/llvm\/arrayconstant"},"doc://LLVM/documentation/LLVM/ArrayConstant/flatMap(_:)-40il8":{"role":"symbol","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SegmentOfResult"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"SegmentOfResult"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Returns an array containing the concatenated results of calling the"},{"type":"text","text":" "},{"type":"text","text":"given transformation with each element of this sequence."}],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/ArrayConstant\/flatMap(_:)-40il8","kind":"symbol","type":"topic","url":"\/documentation\/llvm\/arrayconstant\/flatmap(_:)-40il8"}}}