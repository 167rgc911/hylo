{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"body","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an element of the sequence as a"},{"type":"text","text":" "},{"type":"text","text":"parameter."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The two loops in the following example produce the same output:"}]},{"type":"codeListing","syntax":null,"code":["let numberWords = [\"one\", \"two\", \"three\"]","for word in numberWords {","    print(word)","}","\/\/ Prints \"one\"","\/\/ Prints \"two\"","\/\/ Prints \"three\"","","numberWords.forEach { word in","    print(word)","}","\/\/ Same as above"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":" method is distinct from a "},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"type":"codeVoice","code":"in"},{"type":"text","text":" loop in two"},{"type":"text","text":" "},{"type":"text","text":"important ways:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You cannot use a "},{"type":"codeVoice","code":"break"},{"type":"text","text":" or "},{"type":"codeVoice","code":"continue"},{"type":"text","text":" statement to exit the current"},{"type":"text","text":" "},{"type":"text","text":"call of the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" closure or skip subsequent calls."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"type":"codeVoice","code":"return"},{"type":"text","text":" statement in the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" closure will exit only from"},{"type":"text","text":" "},{"type":"text","text":"the current call to "},{"type":"codeVoice","code":"body"},{"type":"text","text":", not from any outer scope, and wonâ€™t skip"},{"type":"text","text":" "},{"type":"text","text":"subsequent calls."}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/llvm\/structtype\/fields-swift.struct\/foreach(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/LLVM\/documentation\/LLVM\/StructType\/Fields-swift.struct\/forEach(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Calls the given closure on each element in the sequence in the same order"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"type":"codeVoice","code":"in"},{"type":"text","text":" loop."}],"kind":"symbol","metadata":{"role":"symbol","title":"forEach(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"symbolKind":"method","externalID":"s:STsE7forEachyyy7ElementQzKXEKF::SYNTHESIZED::s:4LLVM10StructTypeV6FieldsV","extendedModule":"Swift","modules":[{"name":"LLVM"}]},"hierarchy":{"paths":[["doc:\/\/LLVM\/documentation\/LLVM","doc:\/\/LLVM\/documentation\/LLVM\/StructType","doc:\/\/LLVM\/documentation\/LLVM\/StructType\/Fields-swift.struct","doc:\/\/LLVM\/documentation\/LLVM\/StructType\/Fields-swift.struct\/Sequence-Implementations"]]},"references":{"doc://LLVM/documentation/LLVM/StructType/Fields-swift.struct":{"role":"symbol","title":"StructType.Fields","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fields"}],"abstract":[{"type":"text","text":"A collection containing the fields of a struct type in LLVM IR."}],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/StructType\/Fields-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Fields"}],"url":"\/documentation\/llvm\/structtype\/fields-swift.struct"},"doc://LLVM/documentation/LLVM/StructType/Fields-swift.struct/forEach(_:)":{"role":"symbol","title":"forEach(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"abstract":[{"type":"text","text":"Calls the given closure on each element in the sequence in the same order"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"type":"codeVoice","code":"in"},{"type":"text","text":" loop."}],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/StructType\/Fields-swift.struct\/forEach(_:)","kind":"symbol","type":"topic","url":"\/documentation\/llvm\/structtype\/fields-swift.struct\/foreach(_:)"},"doc://LLVM/documentation/LLVM":{"role":"collection","title":"LLVM","abstract":[],"identifier":"doc:\/\/LLVM\/documentation\/LLVM","kind":"symbol","type":"topic","url":"\/documentation\/llvm"},"doc://LLVM/documentation/LLVM/StructType":{"role":"symbol","title":"StructType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StructType"}],"abstract":[{"type":"text","text":"A struct type in LLVM IR."}],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/StructType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StructType"}],"url":"\/documentation\/llvm\/structtype"},"doc://LLVM/documentation/LLVM/StructType/Fields-swift.struct/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/LLVM\/documentation\/LLVM\/StructType\/Fields-swift.struct\/Sequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/llvm\/structtype\/fields-swift.struct\/sequence-implementations"}}}