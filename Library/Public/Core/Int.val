view ExpressibleByBuiltinIntLiteral {

  new (literal: consuming Builtin::IntLiteral)

}

/// A signed integer value.
type Int: ExpressibleByBuiltinIntLiteral {

  /// the wrapped built-in integer value.
  var value: Builtin::i64

  /// Creates a new value equal to zero.
  new () {
    self = 0
  }

  /// Creates a new value from a built-in literal.
  ///
  /// This constructor is meant to be used internally and should not be called directly.
  new (literal value: consuming Builtin::IntLiteral) {
    self = Int(value: Builtin::i64_trunc_IntLiteral(value))
  }

  /// Returns the result of adding `other` to this value.
  ///
  /// - Parameter other: An integer value.
  fun + (_ other: Int) -> Int {
    return Int(value: Builtin::i64_add(
      Builtin::i64_copy(self.value), Builtin::i64_copy(other.value)))
  }

  /// Returns the result of subtracting `other` from this value.
  ///
  /// - Parameter other: An integer value.
  fun - (_ other: Int) -> Int {
    return Int(value: Builtin::i64_sub(
      Builtin::i64_copy(self.value), Builtin::i64_copy(other.value)))
  }

  /// Returns the result of multiplying `other` with this value.
  ///
  /// - Parameter other: An integer value.
  fun * (_ other: Int) -> Int {
    return Int(value: Builtin::i64_mul(
      Builtin::i64_copy(self.value), Builtin::i64_copy(other.value)))
  }

  /// Returns the result of dividing this value by `other`.
  ///
  /// - Parameter other: An integer value.
  fun / (_ other: Int) -> Int {
    return Int(value: Builtin::i64_div(
      Builtin::i64_copy(self.value), Builtin::i64_copy(other.value)))
  }

  /// Returns the remainder of dividing this value by `other`.
  ///
  /// - Parameter other: An integer value.
  fun % (_ other: Int) -> Int {
    return Int(value: Builtin::i64_rem(
      Builtin::i64_copy(self.value), Builtin::i64_copy(other.value)))
  }

  /// Negates this value, effectively producing the same value with the opposite sign.
  prefix mut fun negate() {
    self = 0 - self
  }

}

extn Int: Copyable {

  fun copy() -> Int {
    return Int(value: Builtin::i64_copy(self.value))
  }

}
