/// A pointer for accessing and manipulating typed data.
public type MutablePointer<Pointee> {

  var value: Builtin.ptr

  memberwise init

  /// Creates an instance referencing the same memory as `other`.
  public init(mutating other: RawPointer) {
    &self.value = other.value
  }

  /// Creates a copy of `other`.
  public init(_ other: MutableRawPointer) {
    &self.value = other.value
  }

  /// Creates a null pointer.
  public static fun null() -> Self {
    .new(value: Builtin.zeroinitializer_ptr())
  }

  /// Returns the result of applying `action` to a projection of the value referenced by `self`.
  public fun with_uninitialized_pointee<E, R>(_ action: [E](set Pointee) -> R) -> R {
    action(value as* (remote set Pointee))
  }

  /// Returns the result of applying `action` to a projection of the value referenced by `self`.
  public fun with_mutable_pointee<E, R>(_ action: [E](inout Pointee) -> R) -> R {
    action(value as* (remote inout Pointee))
  }

}

public conformance MutablePointer: Deinitializable {}

public conformance MutablePointer: Movable {}
