type A { new() {} }
type B { new() {} }
type C { new() {} }

fun mono(_ a: A) -> A {
  ret a
}

fun main() {
  fun mono(_ b: B) -> B {
    ret b
  }

  let x1 = mono(A())
  let x2 = mono(B())

  // #!error@+1 ambiguous use of 'mono'
  let x3 = mono(C())
}
